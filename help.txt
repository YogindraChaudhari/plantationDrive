rules for database:

service firebase.storage {
  match /b/{bucket}/o {
    match /plant-images/{imageId} {
      allow read, write: if request.auth != null; // Allow logged-in users
    }
  }
}

// user2@gmail.com 12345678


// Google Map Api
import React from 'react';
import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';

const PlantMap = ({ plants }) => {
  const [selectedPlant, setSelectedPlant] = React.useState(null);

  return (
    <LoadScript googleMapsApiKey="YOUR_GOOGLE_MAPS_API_KEY">
      <GoogleMap
        mapContainerStyle={{ height: '400px', width: '100%' }}
        center={{ lat: 19.11, lng: 73.06 }} // Set the initial center of the map
        zoom={13}
      >
        {plants.map((plant) => (
          <Marker
            key={plant.id} // Use a unique key for each marker
            position={{ lat: plant.latitude, lng: plant.longitude }}
            onClick={() => setSelectedPlant(plant)}
          />
        ))}

        {selectedPlant && (
          <InfoWindow
            position={{ lat: selectedPlant.latitude, lng: selectedPlant.longitude }}
            onCloseClick={() => setSelectedPlant(null)}
          >
            <div>
              <h3>{selectedPlant.name}</h3>
              <p>Type: {selectedPlant.type}</p>
              <p>Height: {selectedPlant.height}</p>
              <p>Health: {selectedPlant.health}</p>
              <p>Zone: {selectedPlant.zone}</p>
              <p>Plant Number: {selectedPlant.plantNumber}</p>
              {/* Add more fields as needed */}
            </div>
          </InfoWindow>
        )}
      </GoogleMap>
    </LoadScript>
  );
};

export default PlantMap;

// popup:
MapComponent:

import React, { useEffect, useState } from "react";
import { db } from "../services/firebaseConfig";
import { collection, getDocs } from "firebase/firestore";
import { MapContainer, TileLayer, Marker, Popup } from "react-leaflet"; // Import useMap

const MapComponent = () => {
  const [plants, setPlants] = useState([]);

  useEffect(() => {
    const fetchPlants = async () => {
      const querySnapshot = await getDocs(collection(db, "plants"));
      setPlants(
        querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }))
      );
    };
    fetchPlants();
  }, []);

  return (
    <div className="flex flex-col h-screen">
      {/* <header className="bg-gray-800 text-white p-4">
        <h1 className="text-lg font-bold">Plant Map</h1>
      </header> */}
      <div className="flex-grow">
        <MapContainer
          center={[19.0, 73.0]}
          zoom={10}
          style={{ height: "100%" }}
        >
          <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />
          {plants.map((plant) => (
            <Marker key={plant.id} position={[plant.latitude, plant.longitude]}>
              {/* <Popup>{plant.name}</Popup> */}
              <Popup>
                <div className="bg-white shadow-lg rounded-lg p-6 max-w-sm">
                  <h3 className="text-3xl font-bold mb-2">{plant.name}</h3>
                  <p className="text-gray-700 mb-1">
                    <strong>Type:</strong> {plant.type}
                  </p>
                  <p className="text-gray-700 mb-1">
                    <strong>Height:</strong> {plant.height} ft.
                  </p>
                  <p className="text-gray-700 mb-1">
                    <strong>Health:</strong> {plant.health}
                  </p>
                  <p className="text-gray-700 mb-1">
                    <strong>Zone:</strong> {plant.zone}
                  </p>
                  <p className="text-gray-700 mb-2">
                    <strong>Plant Number:</strong> {plant.plantNumber}
                  </p>
                  {plant.imageUrl && (
                    <img
                      src={plant.imageUrl}
                      alt={plant.name}
                      className="w-full h-auto rounded-md"
                    />
                  )}
                </div>
              </Popup>
            </Marker>
          ))}
        </MapContainer>
      </div>
    </div>
  );
};

export default MapComponent;

 <td
    className="px-4 py-2 text-center underline underline-offset-8 cursor-pointer"
    onClick={() => handlePlantClick(plant)}
  >
    {plant.plantNumber}
</td>